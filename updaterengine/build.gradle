apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
// For Jitpack release
apply plugin: 'com.github.dcendents.android-maven'

apply from: rootProject.file("gradleScripts/android_library_extension.gradle")
apply from: rootProject.file("gradleScripts/version_extension.gradle")

//// The version is for our local maven snapshot folder and name.
//// We use maven local as a way to distribute the framework for testing
//version = artifact_version + '-SNAPSHOT'

// Version
def versionPropertiesFile = project.file("version.properties")
def versionProperties = new Properties()
versionProperties.load(new FileInputStream(versionPropertiesFile))

// The group is used by local maven and Jitpack
group = 'com.github.sodalabs.apkupdater'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion

        versionCode buildVersionCode(versionProperties.artifact_version)
        versionName versionProperties.artifact_version

        multiDexEnabled true

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        consumerProguardFiles 'lib-proguard-rules.pro'
    }

    buildTypes {
        debug {
            debuggable true
        }

        staging {
            initWith(release)
            matchingFallbacks = ['release']
        }

        release {
            debuggable false
        }
    }

    dexOptions {
        // Don't preDex on CI
        preDexLibraries = !rootProject.ext.isCI
    }

    packagingOptions {
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/rxjava.properties'
        exclude 'LICENSE.txt'
    }

    aaptOptions {
        cruncherEnabled = false
    }

    lintOptions {
        // TODO: Abort on error to true when lint is fixed
        abortOnError false
        fatal 'StopShip'
    }

    testOptions {
        execution 'ANDROID_TEST_ORCHESTRATOR'
        unitTests {
            all {
                // configure the test JVM arguments
                jvmArgs '-noverify'
                includeAndroidResources = true
                returnDefaultValues = true
            }
        }
    }

    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            outputs.upToDateWhen { false }
            showStandardStreams = true
        }
    }

    configurations.all {
        resolutionStrategy.force "com.google.code.findbugs:jsr305:3.0.2"
    }
}

kapt {
    useBuildCache = true
}

androidExtensions {
    experimental = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Google Support Library.
    api rootProject.ext.dep.xCompat
    api rootProject.ext.dep.xConstraintLayout
    // Multi-dex.
    api rootProject.ext.dep.xMultidex

    // Kotlin STD Library.
    api rootProject.ext.dep.kotlinStdlibJdk7

    // Log
    api rootProject.ext.dep.timber

    // RxAndroid
    api rootProject.ext.dep.rxAndroid
    // RxJava
    api rootProject.ext.dep.rxJava
    api rootProject.ext.dep.rxKotlin
    api rootProject.ext.dep.rxRelay
    // RxView
    api rootProject.ext.dep.rxBinding

    // Networking
    api rootProject.ext.dep.retrofit2
    api rootProject.ext.dep.retrofit2ConverterScalar
    api rootProject.ext.dep.retrofit2ConverterMoshi
    api rootProject.ext.dep.retrofit2AdapterRxJava2
    api rootProject.ext.dep.okhttpLoggingInterceptor

    // Moshi for Serialization/Deserialization
    api rootProject.ext.dep.moshi
    kapt rootProject.ext.dep.moshiKotlinCodegen

    // Better File Downloader
    api rootProject.ext.dep.thinkDownloadManager

    // File Utils
    api rootProject.ext.dep.apacheCommonIo

    // Unit tests.
    testImplementation rootProject.ext.dep.testJunit
    testImplementation rootProject.ext.dep.testMockito
    testImplementation rootProject.ext.dep.testRobolectric
    testImplementation rootProject.ext.dep.koinTest
    testImplementation rootProject.ext.dep.xMultidex

    // Instrumentation tests.
    androidTestImplementation rootProject.ext.dep.testRunner
    androidTestImplementation rootProject.ext.dep.testEspressoCore
}