apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: "$rootDir/quality.gradle"
apply from: "$rootDir/extension.gradle"
apply from: "$rootDir/android_library_extension.gradle"
apply plugin: 'com.github.dcendents.android-maven'

// The version is for our local maven snapshot folder and name.
// We use maven local as a way to distribute the framework for testing
version = artifact_version + '-SNAPSHOT'

// The group is used by local maven and Jitpack
group = 'com.github.sodalabs'

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28
        versionCode buildVersionCode(artifact_version)
        versionName artifact_version
        multiDexEnabled true

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        consumerProguardFiles 'lib-proguard-rules.pro'
    }

    buildTypes {
        all {
            minifyEnabled false
        }

        debug {
            debuggable true
            testCoverageEnabled = true
        }

        release {
            debuggable false

            // Disables PNG crunching for the release build type.
            crunchPngs false
        }
    }

    dexOptions {
        // Don't preDex on CI
        preDexLibraries = !rootProject.build.ci
    }

    packagingOptions {
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/rxjava.properties'
        exclude 'LICENSE.txt'
    }

    aaptOptions {
        cruncherEnabled = false
    }

    lintOptions {
        // TODO: Abort on error to true when lint is fixed
        abortOnError false
        fatal 'StopShip'
    }

    testOptions {
        execution 'ANDROID_TEST_ORCHESTRATOR'
        unitTests {
            all {
                // configure the test JVM arguments
                jvmArgs '-noverify'
                includeAndroidResources = true
                returnDefaultValues = true
            }
        }
    }

    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            outputs.upToDateWhen { false }
            showStandardStreams = true
        }
    }

    configurations.all {
        resolutionStrategy.force "com.google.code.findbugs:jsr305:3.0.2"
    }
}

kapt {
    useBuildCache = true
}

androidExtensions {
    experimental = true
}

dependencies {
    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Support Libs
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation "com.android.support:multidex:1.0.3"

    // Better logging
    implementation "com.jakewharton.timber:timber:4.7.1"

    // Networking
    implementation "com.squareup.retrofit2:retrofit:2.4.0"
    implementation "com.squareup.retrofit2:converter-scalars:2.4.0"
    implementation "com.squareup.retrofit2:converter-moshi:2.4.0"
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.4.0"
    implementation "com.squareup.okhttp3:logging-interceptor:3.11.0"

    // Moshi for Serialization/Deserialization
    implementation "com.squareup.moshi:moshi:1.7.0"
    kapt 'com.squareup.moshi:moshi-kotlin-codegen:1.7.0'

    // Better File Downloader
    implementation "com.mani:ThinDownloadManager:1.4.0"

    // File Utils
    implementation "commons-io:commons-io:2.6"

    // Tests
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

repositories {
    mavenCentral()
}
