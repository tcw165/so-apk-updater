apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

apply from: rootProject.file("gradleScripts/android_library_extension.gradle")
apply from: rootProject.file("gradleScripts/version_extension.gradle")

//// The version is for our local maven snapshot folder and name.
//// We use maven local as a way to distribute the framework for testing
//version = artifact_version + '-SNAPSHOT'

// Version
def versionPropertiesFile = rootProject.file("version.properties") // The repo (global) properties
def versionProperties = new Properties()
versionProperties.load(new FileInputStream(versionPropertiesFile))

android {
    compileSdkVersion deps.build.compileSdkVersion
    buildToolsVersion deps.build.buildToolsVersion

    defaultConfig {
        minSdkVersion deps.build.minSdkVersion
        targetSdkVersion deps.build.targetSdkVersion

        versionCode buildVersionCode(versionProperties.artifact_version)
        versionName versionProperties.artifact_version

        multiDexEnabled true

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        consumerProguardFiles 'lib-proguard-rules.pro'
    }

    buildTypes {
        debug {
            debuggable true
        }

        preRelease {
            initWith(release)
            matchingFallbacks = ['release']
        }

        release {
            debuggable false
        }
    }

    dexOptions {
        // Don't preDex on CI
        preDexLibraries = !rootProject.ext.isCI
    }

    packagingOptions {
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/rxjava.properties'
        exclude 'LICENSE.txt'
    }

    aaptOptions {
        cruncherEnabled = false
    }

    lintOptions {
        // TODO: Abort on error to true when lint is fixed
        abortOnError false
        fatal 'StopShip'
    }

    testOptions {
        execution 'ANDROID_TEST_ORCHESTRATOR'
        unitTests {
            all {
                // configure the test JVM arguments
                jvmArgs '-noverify'
                includeAndroidResources = true
                returnDefaultValues = true
            }
        }
    }

    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            outputs.upToDateWhen { false }
            showStandardStreams = true
        }
    }

    configurations.all {
        resolutionStrategy.force "com.google.code.findbugs:jsr305:3.0.2"
    }
}

kapt {
    useBuildCache = true
}

androidExtensions {
    experimental = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Android
    api deps.androidx.appcompat
    api deps.androidx.annotations
    api deps.androidx.constraintLayout
    api deps.androidx.preference
    api deps.androidx.coreKtx
    api deps.androidx.workManager
    api deps.androidx.workManagerRx

    // Multi-dex.
    api deps.androidx.multidex

    // Kotlin
    api deps.kotlin.stdlibJdk7

    // DI
    api deps.dagger.android
    api deps.dagger.androidSupport
    kapt deps.dagger.compiler
    kapt deps.dagger.androidCompiler

    // Tracking
    api deps.tracking.timber

    // Rx
    api deps.rx.java
    api deps.rx.android
    api deps.rx.kotlin
    api deps.rx.relay
    api deps.rx.binding.lib
    api deps.rx.binding.appcompat
    api deps.rx.binding.design
    api deps.rx.binding.recyclerview
    api deps.rx.binding.viewpager

    // Network
    api deps.retrofit.lib
    api deps.retrofit.okhttp
    api deps.retrofit.adapterRx
    api deps.retrofit.converterGson
    api deps.retrofit.converterMoshi
    api deps.retrofit.converterScalars
    api deps.retrofit.interceptorLogging

    // Json
    api deps.moshi.lib
    kapt deps.moshi.codegen

    // IO
    api deps.fileio.apacheCommonIo

    // Time
    api deps.threetenbp
    // Use JVM Backport only for testing
    // Reference: https://github.com/JakeWharton/ThreeTenABP/issues/14
    testCompile('org.threeten:threetenbp:1.3.2') {
        exclude group: 'com.jakewharton.threetenabp', module: 'threetenabp'
    }

    // Unit tests.
    testImplementation deps.kotlin.unitTest
    testImplementation deps.test.junit
    testImplementation deps.test.kotlin
    testImplementation deps.test.kluent
    // BDD
    testImplementation deps.test.kotlinTest
    // Mocking
    testImplementation deps.test.mockk

    // Instrumentation tests.
    androidTestImplementation deps.test.runner
    androidTestImplementation deps.test.espresso.core
}