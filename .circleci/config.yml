version: 2

jobs:
  checkout-cache:
    working_directory: ~/project
    docker:
      - image: circleci/android:api-28-alpha
    environment:
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xms256m -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError"'
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "dependencies.gradle" }}-{{ checksum ".circleci/config.yml" }}-{{ checksum "Gemfile.lock" }}
      - run:
          name: Download Keystore
          command: echo $RELEASE_KEYSTORE_BASE64 | base64 --decode > build.keystore
      - run:
          name: Create keystore.properies
          command: printf 'releaseKeyAlias=%s\nreleaseKeyPassword=%s\nreleaseKeyStore=%s\nreleaseStorePassword=%s\n'
            $RELEASE_KEY_ALIAS $RELEASE_KEY_PASSWORD build.keystore $RELEASE_STORE_PASSWORD
            > keystore.properties
      - run:
          name: Download dependencies
          command: ./gradlew androidDependencies --no-daemon -Pkotlin.incremental=false --max-workers=2 --stacktrace
      - save_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "dependencies.gradle" }}-{{ checksum ".circleci/config.yml" }}-{{ checksum "Gemfile.lock" }}
          paths:
            - ~/.gradle
            - ~/.bundle
            - ~/project/keystore.properties
            - ~/project/build.keystore

  test-lint:
    working_directory: ~/project
    docker:
      - image: circleci/android:api-28-alpha
    environment:
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xms256m -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError"'
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "dependencies.gradle" }}-{{ checksum ".circleci/config.yml" }}-{{ checksum "Gemfile.lock" }}
      - run:
          name: Run Lint Test
          command: ./gradlew pmd ktlintCheck --no-daemon -Pkotlin.incremental=false --max-workers=2 --stacktrace

  test-unit-test:
    working_directory: ~/project
    docker:
      - image: circleci/android:api-28-alpha
    environment:
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xms256m -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError"'
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "dependencies.gradle" }}-{{ checksum ".circleci/config.yml" }}-{{ checksum "Gemfile.lock" }}
      - run:
          name: Run Unit Test
          command: ./gradlew test --no-daemon -Pkotlin.incremental=false --max-workers=2 --stacktrace
      - store_test_results:
          path: apkupdater/build/test-results
          destination: apkupdater-test
      # TODO: Shall we add the engine lib test report?
      - store_test_results:
          path: privilegedinstaller/build/test-results
          destination: privilegedinstaller-test

  test-proguard:
    working_directory: ~/project
    docker:
      - image: circleci/android:api-28-alpha
    environment:
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xms256m -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError"'
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "dependencies.gradle" }}-{{ checksum ".circleci/config.yml" }}-{{ checksum "Gemfile.lock" }}
      - run:
          name: Test ProGuard
          command: ./gradlew assembleRelease --no-daemon -Pkotlin.incremental=false --max-workers=2 --stacktrace
      - store_artifacts:
          path: apkupdater/build/outputs/mapping/release
          destination: proguard
      - store_artifacts:
          path: privilegedinstaller/build/outputs/mapping/release
          destination: proguard

  build-apkupdater-debug:
    working_directory: ~/ApkUpdater
    docker:
      - image: circleci/android:api-28-alpha
    environment:
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xms256m -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError"'
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "dependencies.gradle" }}-{{ checksum ".circleci/config.yml" }}-{{ checksum "Gemfile.lock" }}
      - run:
          name: Build APK Updater (Debug)
          command: ./gradlew :apkupdater:assembleDebug --no-daemon -Pkotlin.incremental=false --max-workers=2 --stacktrace
      - store_artifacts:
          path: apkupdater/build/outputs/apk/debug
          destination: apk

  build-privilegedinstaller-debug:
    working_directory: ~/ApkUpdater
    docker:
      - image: circleci/android:api-28-alpha
    environment:
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xms256m -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError"'
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "dependencies.gradle" }}-{{ checksum ".circleci/config.yml" }}-{{ checksum "Gemfile.lock" }}
      - run:
          name: Build Privileged Installer (Debug)
          command: ./gradlew :privilegedinstaller:assembleDebug --no-daemon -Pkotlin.incremental=false --max-workers=2 --stacktrace
      - store_artifacts:
          path: privilegedinstaller/build/outputs/apk/debug
          destination: apk

  # TODO: Release the engine lib to Jitpack?

  build-apkupdater-release:
    working_directory: ~/ApkUpdater
    docker:
      - image: circleci/android:api-28-alpha
    environment:
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xms256m -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError"'
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "dependencies.gradle" }}-{{ checksum ".circleci/config.yml" }}-{{ checksum "Gemfile.lock" }}
      - run:
          name: Build APK Updater (Release)
          command: ./gradlew :apkupdater:assembleRelease --no-daemon -Pkotlin.incremental=false --max-workers=2 --stacktrace
      - run:
          name: Install FastLane
          command: |
            gem update bundler
            bundle install
      - run:
          name: Release to Github
          command: fastlane releaseGithub
      - store_artifacts:
          path: apkupdater/build/outputs/apk/release
          destination: apk

  build-privilegedinstaller-release:
    working_directory: ~/ApkUpdater
    docker:
      - image: circleci/android:api-28-alpha
    environment:
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xms256m -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError"'
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "dependencies.gradle" }}-{{ checksum ".circleci/config.yml" }}-{{ checksum "Gemfile.lock" }}
      - run:
          name: Build Privileged Installer (Release)
          command: ./gradlew :privilegedinstaller:assembleRelease --no-daemon -Pkotlin.incremental=false --max-workers=2 --stacktrace
      - run:
          name: Install FastLane
          command: |
            gem update bundler
            bundle install
      - run:
          name: Release to Github
          command: fastlane releaseGithub
      - store_artifacts:
          path: privilegedinstaller/build/outputs/apk/release
          destination: apk

workflows:
  version: 2
  robot:
    jobs:
      - checkout-cache
      - test-lint:
          requires:
            - checkout-cache
      - test-unit-test:
          requires:
            - checkout-cache
      - test-proguard:
          requires:
            - checkout-cache
      - build-apkupdater-debug:
          filters:
            branches:
              ignore: master
          requires:
            - test-lint
            - test-unit-test
            - test-proguard
      - build-privilegedinstaller-debug:
          filters:
            branches:
              ignore: master
          requires:
            - test-lint
            - test-unit-test
            - test-proguard
      # TODO: Release the engine lib to Jitpack?
      - build-apkupdater-release:
          filters:
            branches:
              only: master
          requires:
            - test-lint
            - test-unit-test
            - test-proguard
      - build-privilegedinstaller-release:
          filters:
            branches:
              only: master
          requires:
            - test-lint
            - test-unit-test
            - test-proguard