apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "io.fabric"

apply from: rootProject.file("gradleScripts/android_app_extension.gradle")
apply from: rootProject.file("gradleScripts/version_extension.gradle")

// If you are missing these files, please download from our internal file repo
// https://drive.google.com/open?id=1a-H4w7Qia5EPBJKh2fE7aJ-07LjBR2Vh
def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

// Version
def versionPropertiesFile = project.file("version.properties")
def versionProperties = new Properties()
versionProperties.load(new FileInputStream(versionPropertiesFile))

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "co.sodalabs.apkupdater"

        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion

        versionCode buildVersionCode(versionProperties.artifact_version)
        versionName versionProperties.artifact_version

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "BASE_URL", "\"make sure update this, please!\""

        buildConfigField "int", "HEARTBEAT_INTERVAL_SECONDS", "15"
        buildConfigField "int", "UPDATE_CHECK_INTERVAL_SECONDS", "1440"

        buildConfigField "int", "CONNECT_TIMEOUT_SECONDS", "45"
        buildConfigField "int", "READ_TIMEOUT_SECONDS", "45"
        buildConfigField "int", "WRITE_TIMEOUT_SECONDS", "45"
        buildConfigField "int", "MAX_CONNECTIONS_PER_HOST", "10"
        buildConfigField "int", "MAX_TOTAL_CONNECTIONS", "10"
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false

            buildConfigField "int", "HEARTBEAT_INTERVAL_SECONDS", "15"
            buildConfigField "int", "UPDATE_CHECK_INTERVAL_SECONDS", "300" // 5 min

            buildConfigField "int", "CONNECT_TIMEOUT_SECONDS", "30"
            buildConfigField "int", "READ_TIMEOUT_SECONDS", "30"
            buildConfigField "int", "WRITE_TIMEOUT_SECONDS", "30"
        }

        staging {
            initWith(release)
            matchingFallbacks = ['release']

            // Disables PNG crunching for the release build type.
            crunchPngs false
        }

        release {
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            // Disables PNG crunching for the release build type.
            crunchPngs false

            buildConfigField "int", "HEARTBEAT_INTERVAL_SECONDS", "300" // 5 min
            buildConfigField "int", "UPDATE_CHECK_INTERVAL_SECONDS", "86400" // 1 day

            buildConfigField "int", "CONNECT_TIMEOUT_SECONDS", "60"
            buildConfigField "int", "READ_TIMEOUT_SECONDS", "60"
            buildConfigField "int", "WRITE_TIMEOUT_SECONDS", "60"
        }
    }

    flavorDimensions "PRODUCT"

    productFlavors {
        sparkpoint {
            dimension "PRODUCT"
            buildConfigField "String", "BASE_URL", "\"https://spark-api-v0-prod.azurewebsites.net/api/v0/\""
            buildConfigField "String[]", "PACKAGES_TO_CHECK", "{" +
                "\"co.sodalabs.sparkpoint\"" +
                "}"
        }
    }

    dexOptions {
        // Don't preDex on CI
        preDexLibraries = !rootProject.ext.isCI
    }

    packagingOptions {
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/rxjava.properties'
        exclude 'LICENSE.txt'
    }

    aaptOptions {
        cruncherEnabled = false
    }

    lintOptions {
        abortOnError true
        fatal 'StopShip'

        // this is never going to be a real "app"
        disable 'GoogleAppIndexingWarning'
    }

    testOptions {
        execution 'ANDROID_TEST_ORCHESTRATOR'
        unitTests {
            all {
                // configure the test JVM arguments
                jvmArgs '-noverify'
                includeAndroidResources = true
                returnDefaultValues = true
            }
        }
    }

    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            outputs.upToDateWhen { false }
            showStandardStreams = true
        }
    }

    configurations.all {
        resolutionStrategy.force "com.google.code.findbugs:jsr305:3.0.2"
    }
}

kapt {
    useBuildCache = true
}

androidExtensions {
    experimental = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Google Support Library.
    implementation rootProject.ext.dep.xCompat
    implementation rootProject.ext.dep.xConstraintLayout
    implementation rootProject.ext.dep.xPreference
    // Multi-dex.
    implementation rootProject.ext.dep.xMultidex

    // Kotlin STD Library.
    api rootProject.ext.dep.kotlinStdlibJdk7

    // DI
    implementation rootProject.ext.dep.dagger2
    kapt rootProject.ext.dep.dagger2Compiler

    // RxAndroid
    api rootProject.ext.dep.rxAndroid
    // RxJava
    api rootProject.ext.dep.rxJava
    api rootProject.ext.dep.rxKotlin
    api rootProject.ext.dep.rxRelay
    // RxView
    api rootProject.ext.dep.rxBinding

    // Networking
    implementation rootProject.ext.dep.retrofit2
    implementation rootProject.ext.dep.retrofit2ConverterScalar
    implementation rootProject.ext.dep.retrofit2ConverterMoshi
    implementation rootProject.ext.dep.retrofit2AdapterRxJava2
    implementation rootProject.ext.dep.okhttpLoggingInterceptor

    // Process
    implementation rootProject.ext.dep.processPhoenix

    // Moshi for Serialization/Deserialization
    implementation rootProject.ext.dep.moshi
    kapt rootProject.ext.dep.moshiKotlinCodegen

    implementation project(":updaterengine")

    // Log
    implementation rootProject.ext.dep.timber

    // Better dimens
    implementation rootProject.ext.dep.scaledDP
    implementation rootProject.ext.dep.scaledSP

    // Crashlytics
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.8@aar') {
        transitive = true
    }

    // Unit tests.
    testImplementation rootProject.ext.dep.testJunit
    testImplementation rootProject.ext.dep.testMockito
    testImplementation rootProject.ext.dep.testRobolectric
    testImplementation rootProject.ext.dep.koinTest
    testImplementation rootProject.ext.dep.xMultidex

    // Instrumentation tests.
    androidTestImplementation rootProject.ext.dep.testRunner
    androidTestImplementation rootProject.ext.dep.testEspressoCore
}