rootProject.ext {
    buildVersionCode = { version ->
        def majorMinorBuild = version.tokenize(".")
        def vCode = 0
        def powerOfTen = 1
        def multiplier = 1000
        def baseVersionCode = multiplier**Math.max(majorMinorBuild.size() - 1, 0)
        majorMinorBuild.reverse().eachWithIndex() { obj, i -> (vCode += (obj.toInteger() * powerOfTen)); powerOfTen *= multiplier }

        logger.info("Build version code [" + vCode + "] from version name [" + version + "].")

        if (vCode < baseVersionCode) {
            return vCode + baseVersionCode
        } else {
            return vCode
        }
    }

    // Get the last Git Short Hash
    getGitHash = { ->
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-parse', '--short', 'HEAD'
            ignoreExitValue = true
            standardOutput = stdout
        }
        return stdout.toString().trim()
    }
}